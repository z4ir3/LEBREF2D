function [MESH] = lshapedomain(reflev)
%LSHAPEDOMAIN structured L-shaped domain grid generator
% L-shaped domain generated: (-1,1)^2 \ (-1,0]^2
%  output
% ---------
%  MESH   : mesh data structure
% 
%  input:
% ---------
%  reflev : (optional)initial refinement level (default =0)
%
% See also SQUAREDOMAIN, CRACKDOMAIN
%
% LEBREF2D function; Copyright (c) L. Rocchi  

  if nargin < 1
      reflev = 0;
  end

% ------------------------------------------------------------
% Mesh
% ------------------------------------------------------------
% Vertices coordinates map
  xymap = [ 0.00   -1.00; ...
            1.00   -1.00; ...
           -1.00    0.00; ...
            0.00    0.00; ...
            1.00    0.00; ...
           -1.00    1.00; ...
            0.00    1.00; ...
            1.00    1.00; ...
           -0.50    0.50; ...
            0.50    0.50; ...
            0.50   -0.50];
            
% Elements map
  elmap = [ 1    11     4; ...
            2    11     1; ...
            5    11     2; ...
            4    11     5; ...
            3     9     6; ...
            4     9     3; ...
            7     9     4; ...
            6     9     7; ...
            4    10     7; ...
            5    10     4; ...
            8    10     5; ...
            7    10     8];   

% Boundary elements/edges
  elbdmap = [  1    2; ...
               2    2; ...
               3    2; ...
               5    2; ...
               6    2; ...
               8    2; ...
              11    2; ...
              12    2]; 
          
% Interior vertices
  intvtx = [9 10 11]';
  
% Boundary vertices
  totvtx = 1:size(xymap,1);
  bdvtx  = totvtx(~ismember(totvtx,intvtx))';
  
% MESH structure
  MESH.coord = xymap;
  MESH.elem  = elmap;
  MESH.int   = intvtx;
  MESH.bnd   = bdvtx;
  MESH.elbnd = elbdmap;
  
% Uniform refinements (if any)  
  for i = 1:reflev
      [MESH] = unimeshref(MESH,2);
  end  

end % end function